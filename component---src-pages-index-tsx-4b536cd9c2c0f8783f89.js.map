{"version":3,"file":"component---src-pages-index-tsx-4b536cd9c2c0f8783f89.js","mappings":"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","sources":["webpack://site/./src/pages/index.tsx"],"sourcesContent":["import {useContext, useEffect, useState, useRef} from 'react';\nimport styled from 'styled-components';\n// import { assert } from '@metamask/utils';\nimport {MetamaskActions, MetaMaskContext} from '../hooks';\nimport {\n  connectSnap,\n  getSnap,\n  sendHello,\n  getState,\n  setState,\n  clearState,\n} from '../utils';\nimport {\n  ConnectButton,\n  InstallFlaskButton,\n  ReconnectButton,\n  Button,\n  Card,\n} from '../components';\nimport {request, useLazyGetAccountsQuery} from '../utils/api';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  flex: 1;\n  margin-top: .6rem;\n  margin-bottom: 7.6rem;\n\n  ${({theme}) => theme.mediaQueries.small} {\n    padding-left: 2.4rem;\n    padding-right: 2.4rem;\n    margin-top: 2rem;\n    margin-bottom: 2rem;\n    width: auto;\n  }\n`;\n\nconst Heading = styled.h1`\n  margin-top: 0;\n  margin-bottom: 2.4rem;\n  text-align: center;\n`;\n\nconst Span = styled.span`\n  color: ${(props) => props.theme.colors.primary.default};\n`;\n\nconst Subtitle = styled.p`\n  font-size: ${({theme}) => theme.fontSizes.large};\n  font-weight: 500;\n  margin-top: 0;\n  margin-bottom: 0;\n\n  ${({theme}) => theme.mediaQueries.small} {\n    font-size: ${({theme}) => theme.fontSizes.text};\n  }\n`;\n\nconst CardContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  max-width: 64.8rem;\n  width: 100%;\n  height: 100%;\n  margin-top: 1.5rem;\n`;\n\nconst Label = styled.label`\n  display: block;\n  font-weight: bold;\n`\n\nconst TokenSelect = styled.select`\n  width: 100%;\n  margin-top: 10px;\n  margin-bottom: 10px;\n`\n\nconst Notice = styled.div`\n  background-color: ${({theme}) => theme.colors.background.alternative};\n  border: 1px solid ${({theme}) => theme.colors.border.default};\n  color: ${({theme}) => theme.colors.text.alternative};\n  border-radius: ${({theme}) => theme.radii.default};\n  padding: 2.4rem;\n  margin-top: 2.4rem;\n  max-width: 60rem;\n  width: 100%;\n\n  & > * {\n    margin: 0;\n  }\n\n  ${({theme}) => theme.mediaQueries.small} {\n    margin-top: 1.2rem;\n    padding: 1.6rem;\n  }\n`;\n\nconst ErrorMessage = styled.div`\n  background-color: ${({theme}) => theme.colors.error.muted};\n  border: 1px solid ${({theme}) => theme.colors.error.default};\n  color: ${({theme}) => theme.colors.error.alternative};\n  border-radius: ${({theme}) => theme.radii.default};\n  padding: 2.4rem;\n  margin-bottom: 2.4rem;\n  margin-top: 2.4rem;\n  max-width: 60rem;\n  width: 100%;\n\n  ${({theme}) => theme.mediaQueries.small} {\n    padding: 1.6rem;\n    margin-bottom: 1.2rem;\n    margin-top: 1.2rem;\n    max-width: 100%;\n  }\n`;\n\nconst ButtonGroup = styled.div`\n  display: flex;\n  gap: 10px;\n`\n\nconst Index = () => {\n  const [getAccounts, {isLoading: isLoadingAccounts, data: accounts}] =\n    useLazyGetAccountsQuery();\n\n  const contractsSelectRef = useRef(null);\n\n  const [state, dispatch] = useContext(MetaMaskContext);\n\n  useEffect(() => {\n    getAccounts()\n      // eslint-disable-next-line @typescript-eslint/no-shadow\n      .then((accounts) => console.log(`###: accounts`, accounts))\n      .catch((e) => console.log(`###: e`, e));\n\n  }, []);\n\n  useEffect(() => {\n    async function getContracts() {\n      const snapState = await getState();\n      const contracts = snapState && snapState.contracts;\n\n      if (contracts && contracts.length > 0 && contractsSelectRef) {\n        const options = contractsSelectRef.current.options;\n        console.log(options);\n\n        Array.from(options).forEach(option => {\n          if (contracts.includes(option.value)) {\n            option.selected = true;\n          }\n        });\n      }\n    }\n\n    getContracts();\n  }, []);\n\n  const handleConnectClick = async () => {\n    try {\n      await connectSnap();\n\n      const installedSnap = await getSnap();\n\n      dispatch({\n        type: MetamaskActions.SetInstalled,\n        payload: installedSnap,\n      });\n    } catch (e) {\n      console.error(e);\n      dispatch({type: MetamaskActions.SetError, payload: e});\n    }\n  };\n\n\n  function handleSendTransaction(contractAddress: string) {\n    return function sendTransaction(e){\n      const account = accounts[0];\n      // @ts-ignore\n      request({\n        method: 'eth_sendTransaction',\n        params: [\n          {\n            from: account,\n            to: contractAddress,\n            value: '0x0',\n            data: '0x1',\n          },\n        ],\n      });\n    }\n  };\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    const contractsSelect = e.target.elements[\"tokens\"];\n    const contractsToMonitor = Array.from(contractsSelect.selectedOptions, option => option.value);\n    await setState({contracts: contractsToMonitor});\n  }\n\n  async function getContracts() {\n    const snapState = await getState();\n    return snapState.contracts;\n  }\n\n  async function clearContracts() {\n    await clearState();\n  }\n\n  // @ts-ignore\n  return (\n    <Container>\n      <Heading>\n        Spotter Snap\n      </Heading>\n      <Subtitle>\n        Real-time notifications on potential hacks. Stay secure!\n      </Subtitle>\n      <CardContainer>\n        {state.error && (\n          <ErrorMessage>\n            <b>An error happened:</b> {state.error.message}\n          </ErrorMessage>\n        )}\n        <Card\n          content={{\n            title: 'Reconnect',\n            description:\n              'While connected to a local running snap this button will always be displayed in order to update the snap if a change is made.',\n            button: (\n              <ReconnectButton\n                onClick={handleConnectClick}\n              />\n            ),\n          }}\n        />\n        {!state.isFlask && (\n          <Card\n            content={{\n              title: 'Install',\n              description:\n                'Snaps is pre-release software only available in MetaMask Flask, a canary distribution for developers with access to upcoming features.',\n              button: <InstallFlaskButton/>,\n            }}\n            fullWidth\n          />\n        )}\n        {state.installedSnap && (\n          <Card\n            background={'red'}\n            content={{\n              title: 'High Security Risk',\n              description:\n                'Try high risk contract.',\n              button: (\n                <Button\n                  onClick={handleSendTransaction(\n                    `0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2`,\n                  )}\n                  disabled={!state.isFlask}\n                >Send</Button>\n              ),\n            }}\n            disabled={!state.isFlask}\n          />\n        )}\n        {state.installedSnap && (\n          <Card\n            background={'orange'}\n            content={{\n              title: 'Mid Security Risk',\n              description: 'Try mid risk contract.',\n              button: (\n                <Button\n                  onClick={handleSendTransaction(\n                    `0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9`,\n                  )}\n                  disabled={!state.isFlask}\n                  >Send</Button>\n              ),\n            }}\n            disabled={!state.isFlask}\n          />\n        )}\n        {state.installedSnap && (\n          <Card\n            background={'green'}\n            content={{\n              title: 'No Security Risk',\n              description:\n                'Try no security risk contract.',\n              button: (\n                <Button\n                  onClick={handleSendTransaction(\n                    `0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE8`,\n                  )}\n                  disabled={!state.isFlask}\n                  >Send</Button>\n              ),\n            }}\n            disabled={!state.isFlask}\n          />\n        )}\n      </CardContainer>\n      <CardContainer>\n        <form id=\"token-select\" onSubmit={handleSubmit} onReset={clearContracts}>\n          <Label htmlFor=\"tokens\">Select tokens on Ethereum Mainnet to be monitored by Spotter Snap:</Label>\n          <TokenSelect name=\"tokens\" id=\"tokens\" multiple ref={contractsSelectRef}>\n            <option value=\"0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE8\">Aave WETH V3</option>\n            <option value=\"0x95ecdc6caaf7e4805fcef2679a92338351d24297\">crvUSD</option>\n            <option value=\"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\">USDC</option>\n            <option value=\"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\">USDT</option>\n          </TokenSelect>\n          <ButtonGroup>\n            <Button type=\"submit\">Update</Button>\n            <Button type=\"Button\" onClick={getContracts}>Get Contracts</Button>\n            <Button type=\"reset\">Clear</Button>\n          </ButtonGroup>\n        </form>\n      </CardContainer>\n    </Container>\n  );\n};\n\nexport default Index;\n"],"names":["Container","styled","displayName","componentId","theme","mediaQueries","small","Heading","Subtitle","props","colors","primary","default","fontSizes","large","text","CardContainer","Label","TokenSelect","ErrorMessage","background","alternative","border","radii","error","muted","ButtonGroup","useLazyGetAccountsQuery","getAccounts","_useLazyGetAccountsQu2","accounts","isLoading","data","contractsSelectRef","useRef","useContext","MetaMaskContext","state","dispatch","useEffect","then","console","log","catch","e","_getContracts","_context","getState","snapState","contracts","length","options","current","Array","from","forEach","option","includes","value","selected","getContracts","handleConnectClick","_context2","connectSnap","getSnap","installedSnap","type","MetamaskActions","payload","handleSendTransaction","contractAddress","account","request","method","params","to","_handleSubmit","preventDefault","contractsSelect","target","elements","contractsToMonitor","selectedOptions","_context3","setState","_getContracts2","_context4","_clearContracts","_context5","clearState","_jsxs","children","_jsx","message","Card","content","title","description","button","ReconnectButton","onClick","isFlask","InstallFlaskButton","fullWidth","Button","disabled","id","onSubmit","onReset","htmlFor","name","multiple","ref"],"sourceRoot":""}