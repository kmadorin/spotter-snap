{"version":3,"file":"component---src-pages-index-tsx-d23b1dd207af7e636b8c.js","mappings":"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","sources":["webpack://site/./src/pages/index.tsx"],"sourcesContent":["import {useContext, useEffect} from 'react';\nimport styled from 'styled-components';\n// import { assert } from '@metamask/utils';\nimport {MetamaskActions, MetaMaskContext} from '../hooks';\nimport {\n  connectSnap,\n  getSnap,\n  sendHello,\n} from '../utils';\nimport {\n  ConnectButton,\n  InstallFlaskButton,\n  ReconnectButton,\n  Card,\n} from '../components';\nimport {request, useLazyGetAccountsQuery} from '../utils/api';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  flex: 1;\n  margin-top: .6rem;\n  margin-bottom: 7.6rem;\n\n  ${({theme}) => theme.mediaQueries.small} {\n    padding-left: 2.4rem;\n    padding-right: 2.4rem;\n    margin-top: 2rem;\n    margin-bottom: 2rem;\n    width: auto;\n  }\n`;\n\nconst Heading = styled.h1`\n  margin-top: 0;\n  margin-bottom: 2.4rem;\n  text-align: center;\n`;\n\nconst Span = styled.span`\n  color: ${(props) => props.theme.colors.primary.default};\n`;\n\nconst Subtitle = styled.p`\n  font-size: ${({theme}) => theme.fontSizes.large};\n  font-weight: 500;\n  margin-top: 0;\n  margin-bottom: 0;\n\n  ${({theme}) => theme.mediaQueries.small} {\n    font-size: ${({theme}) => theme.fontSizes.text};\n  }\n`;\n\nconst CardContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  max-width: 64.8rem;\n  width: 100%;\n  height: 100%;\n  margin-top: 1.5rem;\n`;\n\nconst Notice = styled.div`\n  background-color: ${({theme}) => theme.colors.background.alternative};\n  border: 1px solid ${({theme}) => theme.colors.border.default};\n  color: ${({theme}) => theme.colors.text.alternative};\n  border-radius: ${({theme}) => theme.radii.default};\n  padding: 2.4rem;\n  margin-top: 2.4rem;\n  max-width: 60rem;\n  width: 100%;\n\n  & > * {\n    margin: 0;\n  }\n\n  ${({theme}) => theme.mediaQueries.small} {\n    margin-top: 1.2rem;\n    padding: 1.6rem;\n  }\n`;\n\nconst ErrorMessage = styled.div`\n  background-color: ${({theme}) => theme.colors.error.muted};\n  border: 1px solid ${({theme}) => theme.colors.error.default};\n  color: ${({theme}) => theme.colors.error.alternative};\n  border-radius: ${({theme}) => theme.radii.default};\n  padding: 2.4rem;\n  margin-bottom: 2.4rem;\n  margin-top: 2.4rem;\n  max-width: 60rem;\n  width: 100%;\n\n  ${({theme}) => theme.mediaQueries.small} {\n    padding: 1.6rem;\n    margin-bottom: 1.2rem;\n    margin-top: 1.2rem;\n    max-width: 100%;\n  }\n`;\n\nconst Index = () => {\n  const [getAccounts, {isLoading: isLoadingAccounts, data: accounts}] =\n    useLazyGetAccountsQuery();\n\n  const [state, dispatch] = useContext(MetaMaskContext);\n\n  useEffect(() => {\n    getAccounts()\n      // eslint-disable-next-line @typescript-eslint/no-shadow\n      .then((accounts) => console.log(`###: accounts`, accounts))\n      .catch((e) => console.log(`###: e`, e));\n  }, []);\n\n  const handleConnectClick = async () => {\n    try {\n      await connectSnap();\n\n      const installedSnap = await getSnap();\n\n      dispatch({\n        type: MetamaskActions.SetInstalled,\n        payload: installedSnap,\n      });\n    } catch (e) {\n      console.error(e);\n      dispatch({type: MetamaskActions.SetError, payload: e});\n    }\n  };\n\n  // const handleSendHelloClick = async () => {\n  //   try {\n  //     await sendHello();\n  //   } catch (e) {\n  //     console.error(e);\n  //     dispatch({ type: MetamaskActions.SetError, payload: e });\n  //   }\n  // };\n\n  const handleState = () => {\n\n  }\n\n\n  function handleSendTransaction(contractAddress: string) {\n    return function sendTransaction(e){\n      const account = accounts[0];\n      // @ts-ignore\n      request({\n        method: 'eth_sendTransaction',\n        params: [\n          {\n            from: account,\n            to: contractAddress,\n            value: '0x0',\n            data: '0x1',\n          },\n        ],\n      });\n    }\n  };\n\n  // @ts-ignore\n  return (\n    <Container>\n      <Heading>\n        Spotter Snap\n      </Heading>\n      <Subtitle>\n        Real-time notifications on potential hacks. Stay secure!\n      </Subtitle>\n      <CardContainer>\n        {state.error && (\n          <ErrorMessage>\n            <b>An error happened:</b> {state.error.message}\n          </ErrorMessage>\n        )}\n        <Card\n          content={{\n            title: 'Reconnect',\n            description:\n              'While connected to a local running snap this button will always be displayed in order to update the snap if a change is made.',\n            button: (\n              <ReconnectButton\n                onClick={handleConnectClick}\n              />\n            ),\n          }}\n        />\n        {!state.isFlask && (\n          <Card\n            content={{\n              title: 'Install',\n              description:\n                'Snaps is pre-release software only available in MetaMask Flask, a canary distribution for developers with access to upcoming features.',\n              button: <InstallFlaskButton/>,\n            }}\n            fullWidth\n          />\n        )}\n        {state.installedSnap && (\n          <Card\n            background={'red'}\n            content={{\n              title: 'High Security Risk',\n              description:\n                'Try high risk contract.',\n              button: (\n                <ConnectButton\n                  onClick={handleSendTransaction(\n                    `0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2`,\n                  )}\n                  disabled={!state.isFlask}\n                />\n              ),\n            }}\n            disabled={!state.isFlask}\n          />\n        )}\n        {state.installedSnap && (\n          <Card\n            background={'orange'}\n            content={{\n              title: 'Mid Security Risk',\n              description: 'Try mid risk contract.',\n              button: (\n                <ConnectButton\n                  onClick={handleSendTransaction(\n                    `0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9`,\n                  )}\n                  disabled={!state.isFlask}\n                />\n              ),\n            }}\n            disabled={!state.isFlask}\n          />\n        )}\n        {state.installedSnap && (\n          <Card\n            background={'green'}\n            content={{\n              title: 'No Security Risk',\n              description:\n                'Try no security risk contract.',\n              button: (\n                <ConnectButton\n                  onClick={handleSendTransaction(\n                    `0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE8`,\n                  )}\n                  disabled={!state.isFlask}\n                />\n              ),\n            }}\n            disabled={!state.isFlask}\n          />\n        )}\n      </CardContainer>\n    </Container>\n  );\n};\n\nexport default Index;\n"],"names":["Container","styled","displayName","componentId","theme","mediaQueries","small","Heading","Subtitle","props","colors","primary","default","fontSizes","large","text","CardContainer","ErrorMessage","background","alternative","border","radii","error","muted","useLazyGetAccountsQuery","getAccounts","_useLazyGetAccountsQu2","accounts","isLoading","data","useContext","MetaMaskContext","state","dispatch","useEffect","then","console","log","catch","e","handleConnectClick","_context","connectSnap","getSnap","installedSnap","type","MetamaskActions","payload","handleSendTransaction","contractAddress","account","request","method","params","from","to","value","_jsxs","children","_jsx","message","Card","content","title","description","button","ReconnectButton","onClick","isFlask","InstallFlaskButton","fullWidth","ConnectButton","disabled"],"sourceRoot":""}